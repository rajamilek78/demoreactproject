{"ast":null,"code":"var _jsxFileName = \"C:\\\\amilek\\\\demo-weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n//App.js\n\nimport { Oval } from 'react-loader-spinner';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFrown } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GfGWeatherApp() {\n  _s();\n  const [input, setInput] = useState('');\n  const [weather, setWeather] = useState({\n    loading: false,\n    data: {},\n    error: false\n  });\n  const toDateFunction = () => {\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    const WeekDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const currentDate = new Date();\n    const date = `${WeekDays[currentDate.getDay()]} ${currentDate.getDate()} ${months[currentDate.getMonth()]}`;\n    return date;\n  };\n  const search = async event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      setInput('');\n      setWeather({\n        ...weather,\n        loading: true\n      });\n      const url = 'https://api.openweathermap.org/data/2.5/weather';\n      const api_key = 'f00c38e0279b7bc85480c3fe775d518c';\n      await axios.get(url, {\n        params: {\n          q: input,\n          units: 'metric',\n          appid: api_key\n        }\n      }).then(res => {\n        console.log('res', res);\n        setWeather({\n          data: res.data,\n          loading: false,\n          error: false\n        });\n      }).catch(error => {\n        setWeather({\n          ...weather,\n          data: {},\n          error: true\n        });\n        setInput('');\n        console.log('error', error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-name\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"city-search\",\n        placeholder: \"Enter City Name..\",\n        name: \"query\",\n        value: input,\n        onChange: event => setInput(event.target.value),\n        onKeyPress: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), weather.loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Oval, {\n        type: \"Oval\",\n        color: \"black\",\n        height: 100,\n        width: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), weather.error && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faFrown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '20px'\n          },\n          children: \"City not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), weather && weather.data && weather.data.main && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"city-name\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [weather.data.name, \", \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: weather.data.sys.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: toDateFunction()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-temp\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"\",\n          src: `https://openweathermap.org/img/wn/${weather.data.weather[0].icon}@2x.png`,\n          alt: weather.data.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), Math.round(weather.data.main.temp), /*#__PURE__*/_jsxDEV(\"sup\", {\n          className: \"deg\",\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"des-wind\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: weather.data.weather[0].description.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wind Speed: \", weather.data.wind.speed, \"m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(GfGWeatherApp, \"xpIFJEhxHwOGpzrtY/NOZBUmDOY=\");\n_c = GfGWeatherApp;\nexport default GfGWeatherApp;\nvar _c;\n$RefreshReg$(_c, \"GfGWeatherApp\");","map":{"version":3,"names":["Oval","React","useState","axios","FontAwesomeIcon","faFrown","jsxDEV","_jsxDEV","Fragment","_Fragment","GfGWeatherApp","_s","input","setInput","weather","setWeather","loading","data","error","toDateFunction","months","WeekDays","currentDate","Date","date","getDay","getDate","getMonth","search","event","key","preventDefault","url","api_key","get","params","q","units","appid","then","res","console","log","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","name","value","onChange","target","onKeyPress","color","height","width","icon","style","fontSize","main","sys","country","src","alt","description","Math","round","temp","toUpperCase","wind","speed","_c","$RefreshReg$"],"sources":["C:/amilek/demo-weather-app/src/App.js"],"sourcesContent":["//App.js\n \nimport { Oval } from 'react-loader-spinner';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFrown } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\n \nfunction GfGWeatherApp() {\n    const [input, setInput] = useState('');\n    const [weather, setWeather] = useState({\n        loading: false,\n        data: {},\n        error: false,\n    });\n \n    const toDateFunction = () => {\n        const months = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ];\n        const WeekDays = [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday',\n        ];\n        const currentDate = new Date();\n        const date = `${WeekDays[currentDate.getDay()]} ${currentDate.getDate()} ${months[currentDate.getMonth()]\n            }`;\n        return date;\n    };\n \n    const search = async (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            setInput('');\n            setWeather({ ...weather, loading: true });\n            const url = 'https://api.openweathermap.org/data/2.5/weather';\n            const api_key = 'f00c38e0279b7bc85480c3fe775d518c';\n            await axios\n                .get(url, {\n                    params: {\n                        q: input,\n                        units: 'metric',\n                        appid: api_key,\n                    },\n                })\n                .then((res) => {\n                    console.log('res', res);\n                    setWeather({ data: res.data, loading: false, error: false });\n                })\n                .catch((error) => {\n                    setWeather({ ...weather, data: {}, error: true });\n                    setInput('');\n                    console.log('error', error);\n                });\n        }\n    };\n \n    return (\n        <div className=\"App\">\n            <h1 className=\"app-name\">\n                Weather App\n            </h1>\n            <div className=\"search-bar\">\n                <input\n                    type=\"text\"\n                    className=\"city-search\"\n                    placeholder=\"Enter City Name..\"\n                    name=\"query\"\n                    value={input}\n                    onChange={(event) => setInput(event.target.value)}\n                    onKeyPress={search}\n                />\n            </div>\n            {weather.loading && (\n                <>\n                    <br />\n                    <br />\n                    <Oval type=\"Oval\" color=\"black\" height={100} width={100} />\n                </>\n            )}\n            {weather.error && (\n                <>\n                    <br />\n                    <br />\n                    <span className=\"error-message\">\n                        <FontAwesomeIcon icon={faFrown} />\n                        <span style={{ fontSize: '20px' }}>City not found</span>\n                    </span>\n                </>\n            )}\n            {weather && weather.data && weather.data.main && (\n                <div>\n                    <div className=\"city-name\">\n                        <h2>\n                            {weather.data.name}, <span>{weather.data.sys.country}</span>\n                        </h2>\n                    </div>\n                    <div className=\"date\">\n                        <span>{toDateFunction()}</span>\n                    </div>\n                    <div className=\"icon-temp\">\n                        <img\n                            className=\"\"\n                            src={`https://openweathermap.org/img/wn/${weather.data.weather[0].icon}@2x.png`}\n                            alt={weather.data.weather[0].description}\n                        />\n                        {Math.round(weather.data.main.temp)}\n                        <sup className=\"deg\">°C</sup>\n                    </div>\n                    <div className=\"des-wind\">\n                        <p>{weather.data.weather[0].description.toUpperCase()}</p>\n                        <p>Wind Speed: {weather.data.wind.speed}m/s</p>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n \nexport default GfGWeatherApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}